<?php 
$period   = $this->urlGetParams['period'];
$dateFrom = $this->urlGetParams['dateFrom'];
$dateTo   = $this->urlGetParams['dateTo'];
?>
<div class='calendar form-inline' >
	
	<?= $this->transEsc('Period') ?>
	<span class='period-picker'>
		<select id='period' class="form-control">
			<option value='day' <?php if ($period === 'day') echo 'selected'; ?>><?= $this->transEsc('Choose Day') ?></option>
			<option value='range' <?php if ($period ==='range') echo 'selected'; ?>><?= $this->transEsc('Select Range') ?></option>
			<option value='week' <?php if ($period === 'week') echo 'selected'; ?>><?= $this->transEsc('This week') ?></option>
			<option value='month' <?php if (($period === 'month') OR (! $period)) echo 'selected'; ?>><?= $this->transEsc('This month') ?></option>
			<option value='year' <?php if ($period === 'year') echo 'selected'; ?>><?= $this->transEsc('This year') ?></option>
		</select>
	</span>

	<span id='day-calendar'>
		<span class='date-picker-caption'><?= $this->transEsc('Select day') ?></span>
		<span class="input-group">
			<span class="input-group-addon"><i class="fa fa-calendar fa-fw"></i></span>
			<input class="form-control" type="text" id="day-datepicker">
		</span>
	</span>
	
	<span id='range-calendar'>
		<span class='date-picker-caption'><?= $this->transEsc('From') ?></span>
		<span class="input-group">
			<span class="input-group-addon"><i class="fa fa-calendar fa-fw"></i></span>
			<input class="form-control" type="text" id="range-datepicker-from">
		</span>
		
		<span class='date-picker-caption'><?= $this->transEsc('To') ?></span>
		<span class="input-group">
			<span class="input-group-addon"><i class="fa fa-calendar fa-fw"></i></span>
			<input class="form-control" type="text" id="range-datepicker-to">
		</span>
	</span>
	
	<span class='update-stats'>
		<button class='btn btn-primary' id='update-stats'><?= $this->transEsc('Update stats') ?></button>
	</span>
	
	<span class='selected-date-range pull-right'>
	<?php 
		if ($this->urlGetParams['dateFrom'] AND $this->urlGetParams['dateTo']) 
			echo $this->urlGetParams['dateFrom'].' - '.$this->urlGetParams['dateTo']; 
	?>
	</span>
	
</div>


<script>
	jQuery( document ).ready( function( $ ) {

		/**
		 * Gets period from Url query or by select change 
		 * and shows or hides calendars depending on period.
		 *
		 * @param	{string}	p_period
		 *
		 * @return	void
		 */
		var showOrHideCalendars = function(p_period){
			
			var start,
				end;

			if( p_period === 'week' ) {
				
				start = new Date( todayDate.setDate( todayDate.getDate() - todayDate.getDay() + 1) );
				end   = new Date( todayDate.setDate( todayDate.getDate() - todayDate.getDay() + 6 + 1 ) );

				$( '#day-calendar' ).hide();
				$( '#range-calendar' ).hide();
				
			} else if ( p_period === 'month' ) {
				
				start = new Date( todayDate.getFullYear(), todayDate.getMonth(), 1 );
				end   = new Date( todayDate.getFullYear(), todayDate.getMonth() + 1, 0 );

				$( '#day-calendar' ).hide();
				$( '#range-calendar' ).hide();
				
			} else if ( p_period ==='year' ) {

				var year = todayDate.getFullYear(); 
				
				start = year + '-01-01';
				end   = year + '-12-31';

				$( '#day-calendar' ).hide();
				$( '#range-calendar' ).hide();
				
			} else if ( p_period === 'day' ) {
				
				$( '#day-calendar' ).show();
				$( '#range-calendar' ).hide();
				
			} else if ( p_period === 'range' ){

				start = defaultDateFrom;
				end   = defaultDateTo;
				
				$( '#day-calendar' ).hide();
				$( '#range-calendar' ).show();
				
			} else {

				$( '#day-calendar' ).hide();
				$( '#range-calendar' ).hide();
				
			}
			
			$( '#range-datepicker-from' ).datepicker('setDate', start);
			$( '#range-datepicker-to' ).datepicker('setDate', end);
			
		}

		var period = $( '#period' ).val();
		var todayDate = new Date();
				
		// Initializes calendars
		$( '#day-datepicker, #range-datepicker-from, #range-datepicker-to' ).datepicker( {
			changeMonth: true,
			changeYear: true,
			dateFormat: "yy-mm-dd"
		});

		// Sets default dates
		var defaultDateFrom = new Date( todayDate.getFullYear(), todayDate.getMonth(), 1 );
		var defaultDateTo  = new Date( todayDate.getFullYear(), todayDate.getMonth() + 1, 0 );
	
		$( '#day-datepicker' ).datepicker('setDate', todayDate);
		
		$( '#range-datepicker-from' ).datepicker('setDate', defaultDateFrom);
		$( '#range-datepicker-to' ).datepicker('setDate', defaultDateTo);

		// Document write chosen or default dates
		if ( $( '.selected-date-range' ).text().trim().length == 0)
			$( '.selected-date-range' ).html( 
				defaultDateFrom.getFullYear() + '-' + (defaultDateFrom.getMonth()+1) + '-' + defaultDateFrom.getDate() 
				+ ' - ' + 
				defaultDateTo.getFullYear() + '-' + (defaultDateTo.getMonth()+1) + '-' + defaultDateTo.getDate() 
			);

		// show chosen calendar
		<?php
			if (! empty($period)) {
				echo "showOrHideCalendars('$period');";
			} else {
				echo "showOrHideCalendars(period);";
			}
		?>
		

		<?php
			if ($period === 'day') {
				echo "$( '#day-datepicker' ).datepicker('setDate', '$dateFrom');";
			}
			
			if ($period === 'range') {
				echo "$( '#range-datepicker-from' ).datepicker('setDate', '$dateFrom');";
				echo "$( '#range-datepicker-to' ).datepicker('setDate', '$dateTo');";
			}
		?>
		
		// On period change, sets default dates
		$( '#period' ).on( 'change', function() {
			
			period = $( this ).val();
			console.log( 'Period changed to: ' + period );
			
			showOrHideCalendars(period);
		});

		// On click (time change), updates data with reloading
		$( '#update-stats' ).on( 'click', function( event ) {
			
			event.preventDefault();

			if ( period == 'day' ) {
				
				var day = $( '#day-datepicker' ).val();
				$(location).attr( 'href', '?period=' + period + '&dateFrom=' + day + '&dateTo=' + day );
				
			} else {
				
				var dateFrom = $( '#range-datepicker-from' ).val();
				var dateTo = $( '#range-datepicker-to' ).val();
				$(location).attr( 'href', '?period=' + period + '&dateFrom=' + dateFrom + '&dateTo=' + dateTo );
				
			}
			
		});

});
</script>